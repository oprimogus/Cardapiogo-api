basePath: /api
consumes:
- application/json
definitions:
  authentication.SignInParams:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  entity.JWT:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      id_token:
        type: string
      not-before-policy:
        type: integer
      refresh_expires_in:
        type: integer
      refresh_token:
        type: string
      scope:
        type: string
      session_state:
        type: string
      token_type:
        type: string
    type: object
  errors.ErrorResponse:
    properties:
      details: {}
      error:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: gustavo081900@gmail.com
    name: Gustavo Ferreira de Jesus
  description: Documentação da API de delivery Cardapiogo.
  title: Cardapiogo API
  version: "1.0"
paths:
  /v1/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user using email and password and issue a JWT on
        successful login.
      parameters:
      - description: SignInParams
        in: body
        name: request
        schema:
          $ref: '#/definitions/authentication.SignInParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.JWT'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Sign-In with email and password
      tags:
      - Authentication
  /v1/auth/test/authentication:
    get:
      consumes:
      - application/json
      description: Route for test authentication middleware
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.JWT'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      security:
      - Bearer Token: []
      summary: Route for test authentication middleware
      tags:
      - Authentication
produces:
- application/json
securityDefinitions:
  Bearer Token:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
